@model IEnumerable<LoginApp.Models.Notification>
@{
        ViewBag.Title = "Notifications";
}

<div class="notification-container">
    <div class="content-card">
        <h2 class="notification-header">🔔 Notifications</h2>

        <!-- 🔍 Search Bar with Button -->
        <div class="search-container">
            <input type="text" id="searchInput" placeholder="Search notifications..." onkeyup="filterNotifications()">
            <button class="btn-search" onclick="filterNotifications()">Search</button>
        </div>

        @if (!Model.Any())
            {
        <p class="no-notifications">No new notifications.</p>
            }
            else
            {
        <table class="notification-table" id="notificationTable">
            <thead>
                <tr>
                    <th>Message</th>
                    <th>Date</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var notification in Model)
                        {
                <tr>
                    <td class="message">@notification.Message</td>
                    <td>@notification.CreatedAt.ToString("f")</td>
                    <td>
                        <form method="post" action="@Url.Action("MarkNotificationAsRead", "Account")">
                            @Html.Hidden("notificationId", notification.NotificationId)
                            <button type="submit" class="btn-mark-read">Mark as Read</button>
                        </form>
                    </td>
                </tr>
                        }
            </tbody>
        </table>

 <!-- Pagination -->
        <div class="pagination">
            @if (ViewBag.CurrentPage > 1)
                    {
            <a href="@Url.Action("Notifications", "Account", new { page = ViewBag.CurrentPage - 1 })">&laquo; Prev</a>
                    }

            @for (int i = 1; i <= ViewBag.TotalPages; i++)
                    {
            <a href="@Url.Action("Notifications", "Account", new { page = i })"
               class="@(i == ViewBag.CurrentPage ? "active" : "")">@i</a>
                    }

            @if (ViewBag.CurrentPage < ViewBag.TotalPages)
                    {
            <a href="@Url.Action("Notifications", "Account", new { page = ViewBag.CurrentPage + 1 })">Next &raquo;</a>
                    }
        </div>
            }
    </div>
</div>

<!-- 🔹 JavaScript for Search Functionality -->
<script>
    function filterNotifications() {
        let input = document.getElementById("searchInput").value.toLowerCase();
        let table = document.getElementById("notificationTable");
        let rows = table.getElementsByTagName("tr");

        for (let i = 1; i < rows.length; i++) {
            let message = rows[i].getElementsByClassName("message")[0].textContent.toLowerCase();
            rows[i].style.display = message.includes(input) ? "" : "none";
        }
    }
</script>

<style>
    body {
        margin: 0;
        padding: 0;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        background-color: #ecf0f1;
    }

    .notification-container {
        display: flex;
        justify-content: center;
        align-items: flex-start;
        padding: 40px;
        background: #ecf0f1;
    }

    .content-card {
        width: 100vw;
        height: 100vh;
        background-color: #ecf0f1;
        padding: 30px 40px;
    }

    .notification-header {
        font-size: 28px;
        color: #2C3E50;
        margin-top: -30px;
        margin-bottom: 80px;
        border-bottom: 2px solid #2C3E50;
        padding-bottom: 10px;
    }

    .search-container {
        margin-top: -25px;
        text-align: center;
        margin-bottom: 20px;
    }

    #searchInput {
        width: 60%;
        padding: 12px 16px;
        font-size: 16px;
        border: 2px solid #2C3E50;
        border-radius: 6px;
        background: white;
        outline: none;
        margin-right: 10px;
    }

    .btn-search {
        padding: 12px 16px;
        background-color: #2C3E50;
        color: white;
        border: none;
        border-radius: 6px;
        cursor: pointer;
    }

        .btn-search:hover {
            background-color: #1a252f;
        }

    .notification-table {
        width: 100%;
        border-collapse: collapse;
        margin-top: 20px;
        background-color: white;
    }

        .notification-table th, .notification-table td {
            border: 1px solid #ddd;
            padding: 10px;
            text-align: center;
        }

        .notification-table th {
            background-color: #2C3E50;
            color: white;
        }

    .btn-mark-read {
        background-color: #2C3E50;
        color: white;
        border: none;
        padding: 10px 15px;
        border-radius: 8px;
        font-weight: bold;
        cursor: pointer;
        transition: background 0.3s ease;
    }

        .btn-mark-read:hover {
            background-color: #1a252f;
        }

    .no-notifications {
        text-align: center;
        font-size: 20px;
        color: #888;
        margin-top: 30px;
    }

    .pagination {
        text-align: center;
        margin-top: 30px;
    }

        .pagination a {
            padding: 10px 15px;
            margin: 2px;
            text-decoration: none;
            background-color: #2C3E50;
            color: white;
            border-radius: 6px;
            display: inline-block;
        }

            .pagination a.active,
            .pagination a:hover {
                background-color: #3E5668;
                font-weight: bold;
            }
</style>
