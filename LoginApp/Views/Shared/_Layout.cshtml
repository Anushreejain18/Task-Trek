
@{
    ViewBag.Title = "TrackEdge";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - TrackEdge</title>

    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">
    <link rel="stylesheet" href="~/Content/style.css">
</head>
<body>
    <style>
        /* Sidebar Styling */
        .sidebar {
            width: 250px;
            height: 100vh;
            position: fixed;
            left: -250px;
            top: 0;
            background: #2C3E50;
            padding-top: 20px;
            transition: all 0.3s ease-in-out;
            overflow-y: auto;
            z-index: 1000;
        }

            .sidebar.active {
                left: 0;
            }

            .sidebar h3 {
                color: #ECF0F1;
                text-align: center;
                margin-bottom: 20px;
                font-size: 18px;
            }

            .sidebar span {
                font-weight: bold;
                color: #F1C40F;
            }

            .sidebar a {
                color: white !important;
                text-decoration: none;
                display: flex;
                align-items: center;
                padding: 10px 15px;
            }

                .sidebar a:hover {
                    background: rgba(255, 255, 255, 0.1);
                }

                .sidebar a i {
                    margin-right: 10px;
                    font-size: 18px;
                }

        .notification-count {
            background: red;
            color: white;
            font-size: 12px;
            font-weight: bold;
            padding: 3px 8px;
            border-radius: 50%;
            margin-left: auto;
        }

        /* Menu Icon */
        .menu-icon {
            position: fixed;
            top: 10px;
            left: 10px;
            background: #2C3E50;
            color: white;
            font-size: 18px;
            padding: 8px;
            cursor: pointer;
            border-radius: 5px;
            transition: background 0.3s, transform 0.2s;
            z-index: 5000;
        }

            .menu-icon:hover {
                background: #34495E;
            }

        /* Content Area */
        .content-area {
            margin-left: 0;
            padding: 20px;
            transition: margin-left 0.3s ease-in-out;
            background: #ECF0F1;
            min-height: 100vh;
        }

        .sidebar.active ~ .content-area {
            margin-left: 250px;
        }

        body {
            display: flex;
            flex-direction: column;
            min-height: 100vh;
            margin: 0;
        }

        .content-area {
            flex-grow: 1;
            padding: 20px;
            background: #ECF0F1;
        }

        footer {
            position: fixed;
            background: #2C3E50;
            text-align: center;
            padding: 5px 0;
            padding-right: 100px;
            font-size: 14px;
            color: white;
            bottom: 0;
            left: 0;
            width: 100vw;
            box-shadow: 0 -2px 5px rgba(0, 0, 0, 0.1);
        }
    </style>

    <!-- Menu Icon -->
    <div class="menu-icon" id="menuIcon"><i class="fas fa-bars"></i></div>

    <!-- Sidebar -->
    <div class="sidebar" id="sidebar">
        @if (Session["Username"] != null)
        {
        <h3>Welcome <span>@Session["Username"]</span></h3>
        }

        @if (Session["UserRole"]?.ToString() == "Teacher")
        {
        <a href="@Url.Action("Dashboard", "Account")"><i class="fas fa-home"></i> Dashboard</a>
        <a href="@Url.Action("AddStudent", "Account")"><i class="fas fa-user-plus"></i> Add Student</a>
        <a href="@Url.Action("StudentList", "Account")"><i class="fas fa-users"></i> Student List</a>
        <a href="@Url.Action("AddTasks", "Account")"><i class="fas fa-tasks"></i> Add Task</a>
        <a href="@Url.Action("TaskRecord", "Account")"><i class="fas fa-folder-open"></i> Task Records</a>
        <a href="@Url.Action("Notifications", "Account")">
            <i class="fas fa-bell"></i> Notifications
            <span id="notificationCount" class="notification-count">0</span>
        </a>
        <a href="@Url.Action("UploadResource", "Account")"><i class="fas fa-upload"></i> Upload Resource</a>
        <a href="@Url.Action("ViewComments", "Account")"><i class="fas fa-folder"></i> View Comments</a>
        }

        @if (Session["UserRole"]?.ToString() == "Student")
        {
        <a href="@Url.Action("StudentProfile", "Account")"><i class="fas fa-user-circle"></i> My Profile</a>
        <a href="@Url.Action("StudentTasks", "Account")"><i class="fas fa-list-check"></i> Student Tasks</a>
        <a href="@Url.Action("TaskHistory", "Account")"><i class="fas fa-history"></i> Task History</a>
        <a href="@Url.Action("Notifications", "Account")">
            <i class="fas fa-bell"></i> Notifications
            <span id="notificationCount" class="notification-count">0</span>
        </a>
        <a href="@Url.Action("StudentResourceView", "Account")"><i class="fas fa-folder-open"></i> Resources</a>
        }
        <br />
        <br />
        <a href="@Url.Action("Logout", "Account")"><i class="fas fa-sign-out-alt"></i> Logout</a>
    </div>

    <!-- Content Area -->
    <div class="content-area" id="contentArea">
        @RenderBody()
        <footer>
            <p>&copy; @DateTime.Now.Year - TrackEdge</p>
        </footer>
    </div>

    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    @RenderSection("scripts", required: false)

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            let sidebar = document.getElementById("sidebar");
            let menuIcon = document.getElementById("menuIcon");

            if (localStorage.getItem("sidebarOpen") === "true") {
                sidebar.classList.add("active");
            }

            menuIcon.addEventListener("click", function () {
                sidebar.classList.toggle("active");
                localStorage.setItem("sidebarOpen", sidebar.classList.contains("active"));
            });
        });

        async function fetchNotificationCount() {
            try {
                let response = await fetch('/Account/GetUnreadNotificationCount');
                let data = await response.json();
                let countElement = document.getElementById("notificationCount");
                countElement.textContent = data.count > 0 ? data.count : "0";
                countElement.style.display = data.count > 0 ? "inline-block" : "none";
            } catch (error) {
                console.error("Error fetching notifications:", error);
            }
        }

        fetchNotificationCount();
        setInterval(fetchNotificationCount, 60000);
    </script>
</body>
</html>
